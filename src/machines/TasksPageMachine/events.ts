export const SHOW_ADD_TASK = 'SHOW_ADD_TASK';
export type SHOW_ADD_TASK = typeof SHOW_ADD_TASK;

export const CLOSE_ADD_EDIT_TASK_MODAL = 'CLOSE_ADD_EDIT_TASK_MODAL';
export type CLOSE_ADD_EDIT_TASK_MODAL = typeof CLOSE_ADD_EDIT_TASK_MODAL;

export const SHOW_EDIT_TASK = 'SHOW_EDIT_TASK';
export type SHOW_EDIT_TASK = typeof SHOW_EDIT_TASK;

export const SHOW_MAIN_VIEW = 'SHOW_MAIN_VIEW';
export type SHOW_MAIN_VIEW = typeof SHOW_MAIN_VIEW;

export const BOOT = '';
export type BOOT = typeof BOOT;

export const ADD_TASK = 'ADD_TASK';
export type ADD_TASK = typeof ADD_TASK;

export const EDIT_TASK = 'EDIT_TASK';
export type EDIT_TASK = typeof EDIT_TASK;

export const COMPLETE_TASK = 'COMPLETE_TASK';
export type COMPLETE_TASK = typeof COMPLETE_TASK;

export const DELETE_TASK = 'DELETE_TASK';
export type DELETE_TASK = typeof DELETE_TASK;

export const TRANSITION_TO_NO_OVERDUE_AND_SOME_TODAY = 'TRANSITION_TO_NO_OVERDUE_AND_SOME_TODAY';
export type TRANSITION_TO_NO_OVERDUE_AND_SOME_TODAY = typeof TRANSITION_TO_NO_OVERDUE_AND_SOME_TODAY;

export const TRANSITION_TO_SOME_OVERDUE_AND_NO_TODAY = 'TRANSITION_TO_SOME_OVERDUE_AND_NO_TODAY';
export type TRANSITION_TO_SOME_OVERDUE_AND_NO_TODAY = typeof TRANSITION_TO_SOME_OVERDUE_AND_NO_TODAY;

export const TRANSITION_TO_SOME_OVERDUE_AND_SOME_TODAY = 'TRANSITION_TO_SOME_OVERDUE_AND_SOME_TODAY';
export type TRANSITION_TO_SOME_OVERDUE_AND_SOME_TODAY = typeof TRANSITION_TO_SOME_OVERDUE_AND_SOME_TODAY;

export const TRANSITION_TO_NO_OVERDUE_AND_NO_TODAY = 'TRANSITION_TO_NO_OVERDUE_AND_NO_TODAY';
export type TRANSITION_TO_NO_OVERDUE_AND_NO_TODAY = typeof TRANSITION_TO_NO_OVERDUE_AND_NO_TODAY;

export type Events =
  | SHOW_ADD_TASK
  | SHOW_EDIT_TASK
  | SHOW_MAIN_VIEW
  | BOOT
  | ADD_TASK
  | EDIT_TASK
  | DELETE_TASK
  | CLOSE_ADD_EDIT_TASK_MODAL
  | COMPLETE_TASK
  | TRANSITION_TO_NO_OVERDUE_AND_NO_TODAY
  | TRANSITION_TO_NO_OVERDUE_AND_SOME_TODAY
  | TRANSITION_TO_SOME_OVERDUE_AND_NO_TODAY
  | TRANSITION_TO_SOME_OVERDUE_AND_SOME_TODAY;

export interface TasksEvents {
  type: Events;
  data?: any;
}
